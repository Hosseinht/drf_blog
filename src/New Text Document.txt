this is my view:
class PostViewSet(ModelViewSet):
    queryset = get_posts()
    serializer_class = PostSerializer
    lookup_field = "slug"
    permission_classes = [IsAuthenticatedOrReadOnly, IsOwnerOrReadOnly]
    filter_backends = [DjangoFilterBackend, SearchFilter, OrderingFilter]
    filterset_fields = ["author__email", "status", "category__name"]
    search_fields = ["title", "content"]
    ordering_fields = ["published_at"]
    pagination_class = PostPagination

and this is create method in my serializer:
  def create(self, validated_data):
        validated_data["author"] = User.objects.get(
            id=self.context.get("request").user.id
        )
        return super().create(validated_data)

I want to put create functionality in services.py. how can i do that?


import factory
import factory.fuzzy
import datetime

class PostFactory(factory.django.DjangoModelFactory):
    class Meta:
        model = Post

    # Other fields for the Post model
    title = factory.fuzzy.FuzzyText(length=100)
    content = factory.fuzzy.FuzzyText(length=200)
    status = "published"
    category = factory.SubFactory(CategoryFactory)
    author = factory.SubFactory(UserFactory)
    slug = factory.LazyAttribute(lambda obj: slugify(obj.title))

    published_at = factory.Faker(
        "date_time_this_year",
        before_now=True,
        after_time=datetime.datetime(2023, 1, 1),
        tzinfo=datetime.timezone.utc
    ).strftime("%Y-%m-%d %H:%M:%S")